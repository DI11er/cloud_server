version: '3'

services:
  app_nextcloud:
    build:
      context: ./docker/nextcloud  
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 5000:80
      - 5443:443
    volumes:
      - ./docker/nextcloud/nextcloud:/var/www/html
      - ./docker/nextcloud/apps:/var/www/html/apps
      - ./docker/nextcloud/config:/var/www/html/config
      - ./docker/nextcloud/data:/var/www/html/data
      #- ./docker/nextcloud/themes:/var/www/html/themes/<YOUR_CUSTOM_THEME>
      - ./docker/nextcloud/nextcloud.ini:/usr/local/etc/php/conf.d/nextcloud.ini # Перед запуском переименовать nextcloud.ini.example
    environment:
      # System
      - NEXTCLOUD_TRUSTED_DOMAINS= # Доверенные домены через пробел
      - NEXTCLOUD_INIT_LOCK=true # Запрет на одновременное изменение файлов каталога html
      - NEXTCLOUD_INIT_HTACCESS=true
      # DB
      - MYSQL_HOST=db_mariadb
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=MYSQL_PASSWORD
      # Cache
      - REDIS_HOST=cache_redis
      #- REDIS_HOST_PORT= # optional (default 6379) 
      - REDIS_HOST_PASSWORD=REDIS_PASSWORD
    depends_on:
      - db_mariadb
      - cache_redis
      - document_server_onlyoffice
     
  db_mariadb:
    build:
      context: ./docker/mariadb 
      dockerfile: Dockerfile
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - ./docker/mariadb/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=MYSQL_ROOT_PASSWORD
      - MYSQL_PASSWORD=MYSQL_PASSWORD
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
     
  cache_redis:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    restart: unless-stopped
    command: redis-server --requirepass REDIS_PASSWORD

  document_server_onlyoffice:
    build:
      context: ./docker/onlyoffice
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 5080:80 # если не пробросить порты nextcloud не сможет работать с onlyoffice
    volumes:
      - ./docker/onlyoffice/logs:/var/log/onlyoffice
      - ./docker/onlyoffice/data:/var/www/onlyoffice/Data
      - ./docker/onlyoffice/lib:/var/lib/onlyoffice
    environment:
      - JWT_SECRET=AroS1T1ypfSIkHI # Токен для подключения внешних служб
